[
    {
        "id": "bbf8f55f0c3f9fe4",
        "type": "tab",
        "label": "Fingerprint",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "81890e838b0657de",
        "type": "mqtt out",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "topic": "fingerprint/poweronoff",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0d7221151110de61",
        "x": 600,
        "y": 120,
        "wires": []
    },
    {
        "id": "e0d0a50c6ee431b0",
        "type": "firebase auth",
        "z": "bbf8f55f0c3f9fe4",
        "name": "RTDB Auth",
        "firebaseconfig": "",
        "x": 120,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "63f0fa64b687e489",
        "type": "mqtt in",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "topic": "fingerprint/id_get_request",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0d7221151110de61",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 360,
        "wires": [
            [
                "a8f67c9e4d257ec5"
            ]
        ]
    },
    {
        "id": "a8f67c9e4d257ec5",
        "type": "firebase.once",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "firebaseconfig": "",
        "childpath": "/id",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 760,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "40559ec95755edca",
        "type": "remote-access",
        "z": "bbf8f55f0c3f9fe4",
        "confignode": "e124daca6d21176c",
        "name": "",
        "verbose": 0,
        "x": 300,
        "y": 20,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "6d01ce761ea5c6fa",
        "type": "ui_button",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "group": "0d18f6dc995db142",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Power On",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "on",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "81890e838b0657de"
            ]
        ]
    },
    {
        "id": "26ce68fec0195295",
        "type": "ui_button",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "group": "0d18f6dc995db142",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Power Off",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "off",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "81890e838b0657de"
            ]
        ]
    },
    {
        "id": "d102935d50ecd617",
        "type": "ui_text",
        "z": "bbf8f55f0c3f9fe4",
        "group": "0d18f6dc995db142",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Power Status:",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": true,
        "font": "Arial,Arial,Helvetica,sans-serif",
        "fontSize": 16,
        "color": "#ff0000",
        "x": 340,
        "y": 640,
        "wires": []
    },
    {
        "id": "94ada38ed1e91b06",
        "type": "firebase.on",
        "z": "bbf8f55f0c3f9fe4",
        "name": "RetrievePowerStatuts",
        "firebaseconfig": "",
        "childpath": "fingerprint/Power",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 100,
        "y": 640,
        "wires": [
            [
                "d102935d50ecd617"
            ]
        ]
    },
    {
        "id": "ee15786eed4dcd6a",
        "type": "ui_table",
        "z": "bbf8f55f0c3f9fe4",
        "group": "bb093c15ab4d4c80",
        "name": "UserTable",
        "order": 6,
        "width": 0,
        "height": 0,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 840,
        "y": 280,
        "wires": []
    },
    {
        "id": "edab045bf0f03a48",
        "type": "firebase.on",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "firebaseconfig": "",
        "childpath": "/fingerprint/Users",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "1c3a1ed73c35e1fa"
            ]
        ]
    },
    {
        "id": "1c3a1ed73c35e1fa",
        "type": "function",
        "z": "bbf8f55f0c3f9fe4",
        "name": "function 1",
        "func": "let users = msg.payload;\nlet tableData = [];\n\nfor (let key in users) {\n    if (users.hasOwnProperty(key)) {\n        tableData.push({\n            FingerprintId: users[key].id,\n            Name: users[key].name\n        });\n    }\n}\n\nmsg.payload = tableData;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "ee15786eed4dcd6a"
            ]
        ]
    },
    {
        "id": "769c36b70f8a0458",
        "type": "mqtt in",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "topic": "fingerprint/match",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0d7221151110de61",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 760,
        "wires": [
            [
                "acfae1a9a26a6b8d"
            ]
        ]
    },
    {
        "id": "acfae1a9a26a6b8d",
        "type": "function",
        "z": "bbf8f55f0c3f9fe4",
        "name": "function 2",
        "func": "let id = msg.payload.id;\nid = id + 1;\nmsg.childpath = \"/fingerprint/Users/user\" + id;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 760,
        "wires": [
            [
                "4b286d58b16875a8"
            ]
        ]
    },
    {
        "id": "4b286d58b16875a8",
        "type": "firebase.once",
        "z": "bbf8f55f0c3f9fe4",
        "name": "FindUserByID",
        "firebaseconfig": "",
        "childpath": "msg.childpath",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 520,
        "y": 760,
        "wires": [
            [
                "966f3d6088728841"
            ]
        ]
    },
    {
        "id": "966f3d6088728841",
        "type": "function",
        "z": "bbf8f55f0c3f9fe4",
        "name": "function 3",
        "func": "let user = msg.payload;\nlet logEntry = {\n  id: user.id,\n  name: user.name,\n  timestamp: Date.now()\n};\n\nmsg.payload = logEntry;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 760,
        "wires": [
            [
                "29edaa8e763ccdf0"
            ]
        ]
    },
    {
        "id": "29edaa8e763ccdf0",
        "type": "firebase modify",
        "z": "bbf8f55f0c3f9fe4",
        "name": "CreateLogRecord",
        "firebaseconfig": "",
        "childpath": "/fingerprint/log/",
        "method": "push",
        "value": "msg.payload",
        "priority": "msg.priority",
        "x": 970,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "05959761e30757cd",
        "type": "mqtt out",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "topic": "fingerprint/delete",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0d7221151110de61",
        "x": 1010,
        "y": 840,
        "wires": []
    },
    {
        "id": "fd823bcde5ae3348",
        "type": "function",
        "z": "bbf8f55f0c3f9fe4",
        "name": "function 5",
        "func": "let users = msg.payload;\nlet obj = {};\n\nfor (let x in users) {\n    let user = users[x];\n    obj[user.id] = user.name;  // Key is ID, value is name\n}\n\nmsg.payload = obj;  // send directly to ui_template\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 840,
        "wires": [
            [
                "707e3a44754b5ce3"
            ]
        ]
    },
    {
        "id": "5a5f5456b4a7359d",
        "type": "firebase.on",
        "z": "bbf8f55f0c3f9fe4",
        "name": "Retrieve User Info for deletion Fingerprint",
        "firebaseconfig": "",
        "childpath": "/fingerprint/Users/",
        "atStart": true,
        "eventType": "value",
        "queries": [],
        "x": 280,
        "y": 820,
        "wires": [
            [
                "fd823bcde5ae3348"
            ]
        ]
    },
    {
        "id": "ae1510707f1415a5",
        "type": "ui_toast",
        "z": "bbf8f55f0c3f9fe4",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "0126031ffb6f7ba8",
        "type": "ui_form",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "label": "",
        "group": "af2b65ea85e88d79",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Your Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": ""
        },
        "payload": "",
        "submit": "Enroll",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "f831bce43807c2b7"
            ]
        ]
    },
    {
        "id": "00e476a1f8465d07",
        "type": "debug",
        "z": "bbf8f55f0c3f9fe4",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 660,
        "wires": []
    },
    {
        "id": "160cc47707d828e7",
        "type": "ui_button",
        "z": "bbf8f55f0c3f9fe4",
        "d": true,
        "name": "",
        "group": "0d18f6dc995db142",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Enable Button",
        "tooltip": "",
        "color": "green",
        "bgcolor": "white",
        "className": "",
        "icon": "settings",
        "payload": "true",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "3e1b59d6ed9e48c8"
            ]
        ]
    },
    {
        "id": "03ddb3b4a9976de2",
        "type": "ui_button",
        "z": "bbf8f55f0c3f9fe4",
        "d": true,
        "name": "",
        "group": "0d18f6dc995db142",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Disable Button",
        "tooltip": "",
        "color": "red",
        "bgcolor": "white",
        "className": "",
        "icon": "settings",
        "payload": "false",
        "payloadType": "bool",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 1160,
        "wires": [
            [
                "3e1b59d6ed9e48c8"
            ]
        ]
    },
    {
        "id": "3e1b59d6ed9e48c8",
        "type": "change",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "707e3a44754b5ce3",
        "type": "ui_template",
        "z": "bbf8f55f0c3f9fe4",
        "group": "e6e8c9f86428a3a8",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<md-card style=\"background-color: #2d2d2d; color: white;\">\n\n\n  <md-card-content>\n    <p>Select a user:</p>\n    <select id=\"userDropdown\"\n            ng-model=\"selectedUser\"\n            ng-options=\"key as label for (key, label) in users\"\n            ng-change=\"checkSelection()\"\n            style=\"width: 100%; padding: 5px;\">\n    </select>\n\n    <br><br>\n\n    <button class=\"md-button md-raised\"\n            ng-click=\"sendDelete()\"\n            ng-disabled=\"!selectedUser\"\n            style=\"background-color: #7fbf3f; color: black;\">\n      Delete\n    </button>\n  </md-card-content>\n</md-card>\n\n<script>\n(function(scope) {\n  scope.users = {};\n  scope.selectedUser = \"\";\n\n  scope.checkSelection = function() {\n    // Optional: logic when user selects something\n  };\n\n  scope.sendDelete = function() {\n    scope.send({ payload: scope.selectedUser });\n  };\n\n  scope.$watch('msg', function(msg) {\n    if (msg && msg.payload && typeof msg.payload === 'object' && !Array.isArray(msg.payload)) {\n      scope.users = msg.payload;\n    }\n  });\n})(scope);\n</script>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 840,
        "y": 860,
        "wires": [
            [
                "05959761e30757cd"
            ]
        ]
    },
    {
        "id": "c3ee370365739ed6",
        "type": "inject",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 110,
        "y": 1000,
        "wires": [
            [
                "419cf98ee4d90670"
            ]
        ]
    },
    {
        "id": "419cf98ee4d90670",
        "type": "firebase.once",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "firebaseconfig": "",
        "childpath": "/fingerprint/Users/",
        "repeatifnull": false,
        "eventType": "value",
        "queries": [],
        "x": 340,
        "y": 900,
        "wires": [
            [
                "fd823bcde5ae3348"
            ]
        ]
    },
    {
        "id": "1a48fe27d5017dc6",
        "type": "mqtt out",
        "z": "bbf8f55f0c3f9fe4",
        "name": "",
        "topic": "fingerprint/username",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0d7221151110de61",
        "x": 700,
        "y": 200,
        "wires": []
    },
    {
        "id": "f831bce43807c2b7",
        "type": "function",
        "z": "bbf8f55f0c3f9fe4",
        "name": "function 4",
        "func": "let message = msg.payload;\nmessage = message.name;\nmsg.payload = message;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 200,
        "wires": [
            [
                "1a48fe27d5017dc6"
            ]
        ]
    },
    {
        "id": "0d7221151110de61",
        "type": "mqtt-broker",
        "name": "MQTT SERVER",
        "broker": "192.168.1.37",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "e124daca6d21176c",
        "type": "remote-config",
        "name": "Node-RED UI",
        "host": "localhost",
        "protocol": "http",
        "port": "1880",
        "baseurl": "/ui",
        "instancehash": "jvt8uzepph0j08zr1j1iirgwpl4jy674s98dwcb7v5vo214sh92melrgr15a57r3",
        "server": "nodered05.remote-red.com",
        "region": "sg"
    },
    {
        "id": "0d18f6dc995db142",
        "type": "ui_group",
        "name": "Fingerprint",
        "tab": "38b4d82e7fbd2cf0",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "bb093c15ab4d4c80",
        "type": "ui_group",
        "name": "Table",
        "tab": "38b4d82e7fbd2cf0",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "af2b65ea85e88d79",
        "type": "ui_group",
        "name": "Enroll New Fingerprint",
        "tab": "38b4d82e7fbd2cf0",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "e6e8c9f86428a3a8",
        "type": "ui_group",
        "name": "Delete Fingerprint",
        "tab": "38b4d82e7fbd2cf0",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "38b4d82e7fbd2cf0",
        "type": "ui_tab",
        "name": "IOT Smart Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]